(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{208:function(e,t,r){"use strict";r.r(t);var _=r(0),s=Object(_.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),r("p",[e._v("Прежде чем идти дальше, давайте немного обсудим ограничения при написании «универсального» кода — кода, который выполняется как на сервере, так и на клиенте. Из-за различий в API платформы, поведение нашего кода будет отличаться при работе в разных средах выполнения. Здесь мы рассмотрим ключевые моменты, которые вам нужно знать.")]),e._v(" "),e._m(1),e._v(" "),r("p",[e._v("В приложении, которое работает только на клиенте, каждый пользователь использует свежий экземпляр приложения в своём браузере. Для рендеринга на стороне сервера мы хотим того же: каждый запрос должен иметь свежий, изолированный экземпляр приложения, чтобы не возникало загрязнения состояния при перекрёстных запросах.")]),e._v(" "),r("p",[e._v("Поскольку фактический процесс рендеринга должен быть детерминированным, мы также будем «предзагружать» данные на сервере — это означает, что состояние приложения будет разрешённым, на момент начала рендеринга. А это означает, что на сервере реактивность данных не нужна, поэтому по умолчанию она отключена. Отключение реактивности данных также позволяет избежать уменьшения производительности из-за отсутствия необходимости преобразования данных в реактивные объекты.")]),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),r("p",[e._v("Для задач, разделяемых между сервером и клиентом, но использующих разные API платформы, рекомендуется создавать обёртки платформо-специфичных реализаций в универсальное API, или использовать библиотеки, которые делают это за вас. Например, "),r("a",{attrs:{href:"https://github.com/axios/axios",target:"_blank",rel:"noopener noreferrer"}},[e._v("axios"),r("OutboundLink")],1),e._v(" — это HTTP-клиент предоставляющий одинаковое API как для сервера так и для клиента.")]),e._v(" "),r("p",[e._v("Для API только для браузеров общий подход — ленивый (lazy) доступ к ним, внутри хуков жизненного цикла только для клиентской стороны.")]),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),r("p",[e._v("Большинство пользовательских директив непосредственно манипулируют DOM, поэтому будут вызывать ошибки во время SSR. Существует два способа обойти это:")]),e._v(" "),r("ol",[e._m(9),e._v(" "),r("li",[r("p",[e._v("Если у вас есть пользовательская директива, которую нельзя легко заменить компонентами, вы можете предоставить её «серверный вариант» с помощью опции "),r("router-link",{attrs:{to:"./../api/#directives"}},[r("code",[e._v("directives")])]),e._v(" при создании серверного рендерера.")],1)])])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"написание-универсаnьного-кода"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#написание-универсаnьного-кода","aria-hidden":"true"}},[this._v("#")]),this._v(" Написание универсального кода")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"реактивность-данных-на-сервере"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#реактивность-данных-на-сервере","aria-hidden":"true"}},[this._v("#")]),this._v(" Реактивность данных на сервере")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"хуки-жизненного-цикnа-компонента"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#хуки-жизненного-цикnа-компонента","aria-hidden":"true"}},[this._v("#")]),this._v(" Хуки жизненного цикла компонента")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("Так как динамических обновлений нет, из всех хуков жизненного цикла будут вызваны только "),r("code",[e._v("beforeCreate")]),e._v(" и "),r("code",[e._v("created")]),e._v(" во время серверного рендеринга (SSR). Это означает, что код внутри любых других хуков жизненного цикла, таких как "),r("code",[e._v("beforeMount")]),e._v(" или "),r("code",[e._v("mounted")]),e._v(", будет выполняться только на клиенте.")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("Стоит ещё отметить, что вам следует избегать кода, который производит глобальные побочные эффекты (side effects) в хуках "),r("code",[e._v("beforeCreate")]),e._v(" и "),r("code",[e._v("created")]),e._v(", например устанавливая таймеры с помощью "),r("code",[e._v("setInterval")]),e._v(". В коде на стороне клиента мы можем установить таймер, а затем остановить его в "),r("code",[e._v("beforeDestroy")]),e._v(" или "),r("code",[e._v("destroyed")]),e._v(". Но, поскольку хуки уничтожения не будут вызываться во время SSR, таймеры останутся навсегда. Чтобы избежать этого, переместите такой код в "),r("code",[e._v("beforeMount")]),e._v(" или "),r("code",[e._v("mounted")]),e._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"доступ-к-специфичному-api-пnатформы"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#доступ-к-специфичному-api-пnатформы","aria-hidden":"true"}},[this._v("#")]),this._v(" Доступ к специфичному API платформы")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Универсальный код не может использовать API специализированное для какой-то конкретной платформы (platform-specific APIs), потому что если ваш код будет использовать глобальные переменные браузеров "),t("code",[this._v("window")]),this._v(" или "),t("code",[this._v("document")]),this._v(", то возникнут ошибки при выполнении в Node.js, и наоборот.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Обратите внимание, если сторонняя библиотека не была написана с расчётом на универсальное использование, её может быть сложно интегрировать в приложение с серверным рендерингом. Вы "),t("em",[this._v("могли бы")]),this._v(" заставить её работать, например создавая моки некоторых глобальных переменных, но это будет грязным хаком и может помешать коду обнаружения окружения в других библиотеках.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"поnьзоватеnьские-директивы"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#поnьзоватеnьские-директивы","aria-hidden":"true"}},[this._v("#")]),this._v(" Пользовательские директивы")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("Предпочитайте использовать компоненты в качестве механизма абстракции и работайте на уровне виртуального DOM (например, используя render-функции).")])])}],!1,null,null,null);s.options.__file="universal.md";t.default=s.exports}}]);