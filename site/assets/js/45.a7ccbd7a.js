(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{179:function(e,t,r){"use strict";r.r(t);var s=r(0),_=Object(s.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),r("blockquote",[r("p",[e._v("もし以前に、 SSR で Vue 2.2 を使用していた場合、 推奨されるコードの構造が"),r("router-link",{attrs:{to:"./guide/structure.html"}},[e._v("少しだけ違うこと")]),e._v("に気がつくでしょう (新しいオプションの "),r("router-link",{attrs:{to:"./api/#runinnewcontext"}},[e._v("runInNewContext")]),e._v(" を "),r("code",[e._v("false")]),e._v(" にしている場合)。あなたの既存のアプリケーションは依然として動作はするでしょうが、新しく推奨される方に移行されることをオススメします。")],1)]),e._v(" "),e._m(2),e._v(" "),r("p",[e._v('Vue.js はクライアントサイドアプリケーションを構築するためのフレームワークです。通常では、Vue コンポーネントはブラウザで DOM を生成し操作がされます。しかし、同じ Vue コンポーネントをサーバ上の HTML 文字列に描画し、ブラウザに直接送信し、最終的に静的なマークアップとしてクライアント上の完全なインタラクティブアプリケーションに "ハイドレート (hydrate)" することもできます。')]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),r("p",[e._v("従来の SPA (シングルページアプリケーション) と比べて、SSR の利点は主に次の点にあります:")]),e._v(" "),e._m(5),e._v(" "),r("p",[e._v("SSR を使用する際に考慮すべきトレードオフも何点かあります:")]),e._v(" "),e._m(6),e._v(" "),r("p",[e._v("あなたのアプリケーションに SSR を使用する前に、まず初めに、実際に SSR が必要かどうかを考える必要があります。これは主に、アプリケーションのコンテンツに対する時間の重要性によります。 例えば、最初の負荷の数百ミリ秒がそれほど重要ではない内部的なダッシュボードを構築する場合、SSR は過度なものとなるでしょう。しかし、コンテンツの所要時間が非常に重要な場合は、SSR を使用してできるだけ早く初期ロードパフォーマンスを保つことができます。")]),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),r("p",[e._v("もしあなたが webpack を使用している場合、"),r("a",{attrs:{href:"https://github.com/chrisvfritz/prerender-spa-plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("prerender-spa-plugin"),r("OutboundLink")],1),e._v(" を使用することで簡単にプリレンダリングを実装することができます。 これは Vue アプリケーションで広くテストが行われています。実際には、"),r("a",{attrs:{href:"https://github.com/chrisvfritz",target:"_blank",rel:"noopener noreferrer"}},[e._v("作成者は"),r("OutboundLink")],1),e._v("  Vue のコアチームメンバです。")]),e._v(" "),e._m(9),e._v(" "),r("p",[e._v("このガイドはサーバとして Node.js を使用してサーバで描画されたシングルページアプリケーションに焦点が当てられています。他のバックエンドの設定と Vue の SSR と混在させることは、それ自体主題であり、"),r("router-link",{attrs:{to:"./guide/non-node.html"}},[e._v("専用セクション")]),e._v("で手短に議論されています。")],1),e._v(" "),r("p",[e._v("このガイドは、Vue.js 自体に精通しており、且つ Node.js と webpack に関する実用的な知識を持っていることを前提としています。もしあなたが、すぐに使用できる高度なソリューションを求めている場合は、"),r("a",{attrs:{href:"http://nuxtjs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nuxt.js"),r("OutboundLink")],1),e._v(" を試してみてください。これは同じ Vue スタック上に構築されていますが、多くの定型文が抽象化されており、静的なサイト生成などの追加機能を提供します。しかし、アプリケーションの構造をより直接的に制御する必要がある場合は、ユースケースに合わない場合があります。いずれにしても、仕組みをより理解するために、このガイドを読むことはまだ有益です。")]),e._v(" "),r("p",[e._v("また、あなたが読まれているように、このガイドで説明されている技術のほとんどが "),r("a",{attrs:{href:"https://github.com/vuejs/vue-hackernews-2.0/",target:"_blank",rel:"noopener noreferrer"}},[e._v("HackerNews Demo"),r("OutboundLink")],1),e._v(" にて使用されており、そちらを参照するととても役立つことでしょう。")]),e._v(" "),r("p",[e._v("最後に、このガイドの解決策は決定的なものではないことを覚えておいてください。私たちはこれらがうまく働くことを見つけていますが、これ以上改善がされないということではありません。将来改訂されるかもしれません。プルリクエストを送ることによって貢献することも、もちろん自由です！")])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"vue-js-サーバサイドレンダリングガイド"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-js-サーバサイドレンダリングガイド","aria-hidden":"true"}},[this._v("#")]),this._v(" Vue.js サーバサイドレンダリングガイド")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("blockquote",[r("p",[r("strong",[e._v("注意:")]),e._v(" このガイドは Vue.js またはサポートしているライブラリの以下の最小バージョンを必須としています:")]),e._v(" "),r("ul",[r("li",[e._v("vue & vue-server-renderer 2.3.0 以上")]),e._v(" "),r("li",[e._v("vue-router 2.5.0 以上")]),e._v(" "),r("li",[e._v("vue-loader 12.0.0 以上 & vue-style-loader 3.0.0 以上")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"サーバサイドレンダリング-ssr-とは何か"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サーバサイドレンダリング-ssr-とは何か","aria-hidden":"true"}},[this._v("#")]),this._v(" サーバサイドレンダリング (SSR) とは何か?")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("サーバで描画された Vue.js のアプリケーションは、アプリケーションのコードの大部分が、サーバとクライアントの"),t("strong",[this._v("両方")]),this._v('で実行されるという意味で、"アイソモルフィック (isomorphic)" や "ユニバーサル (universal)" と見なすことができます。')])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"どうして-ssr-なのか"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#どうして-ssr-なのか","aria-hidden":"true"}},[this._v("#")]),this._v(" どうして SSR なのか?")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("p",[this._v("検索エンジンのクローラが完全に描画されたページを直接解析するため、SEO が向上します。")]),this._v(" "),t("p",[this._v("現在のところ、Google と Bing は同期的 JavaScript アプリケーションのインデックスを作成できます。同期がキーワードです。あなたのアプリケーションが読み込み中にスピナが表示され、Ajax 経由でコンテンツを取得する場合、クローラーはあなたが完了するまで待たないでしょう。つまり、SEO が重要なページで非同期にコンテンツを取得する場合は、SSR が必要な場合があります。")])]),this._v(" "),t("li",[t("p",[this._v("特にインターネットの遅さや遅いデバイスでは、コンテンツの再生時間が短縮されます。サーバで描画されたマークアップは、すべての JavaScript がダウンロードされて表示されるまで待つ必要がないので、ユーザは完全に描画されたページをすぐに見ることができます。これにより、一般的にユーザーエクスペリエンスが向上し、コンテンツの所要時間が直接コンバージョン率に関連付けられているアプリケーションにとっては重要になります。")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("p",[this._v("開発上の制約。 ブラウザ固有のコードは、特定のライフサイクルフック内でのみ使用できます。一部の外部ライブラリは、サーバで描画されたアプリケーションで実行できるように特別な処理が必要な場合があります。")])]),this._v(" "),t("li",[t("p",[this._v("より複雑なセットアップと開発の要件を構築します。静的ファイルサーバに展開できる完全静的 SPA とは異なり、サーバで描画されたアプリケーションでは Node.js サーバを実行できる環境が必要になります。")])]),this._v(" "),t("li",[t("p",[this._v("サーバ側の負荷が増えます。 Node.js の完全なアプリケーションを描画することは、静的ファイルを提供するだけでなく、CPU を多用することになるので、トラフィックが多いことが見込まれる場合は、対応するサーバの負荷に備え、キャッシュの対策を賢明に行なってください。")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"ssr-vs-プリレンダリング-事前描画"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssr-vs-プリレンダリング-事前描画","aria-hidden":"true"}},[this._v("#")]),this._v(" SSR vs プリレンダリング (事前描画)")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("もしあなたが、幾つかのマーケティングのページの SEO を向上させるためだけに SSR を調べているとしたら (たとえば "),r("code",[e._v("/")]),e._v(", "),r("code",[e._v("/about")]),e._v(",  "),r("code",[e._v("/contact")]),e._v(" など)、代わりに "),r("strong",[e._v("プリレンダリング (事前描画)")]),e._v(" を使用することをオススメします。 HTML を急いでコンパイルするために Web サーバーを使用するのではなく、プリレンダリングは、ビルド時に特定のルートに対して静的な HTML ファイルを生成します。利点はプリレンダリングを設定する方が遥かに簡単で、フロントエンドを完全に静的なサイトとして保つことができることです。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"このガイドについて"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#このガイドについて","aria-hidden":"true"}},[this._v("#")]),this._v(" このガイドについて")])}],!1,null,null,null);_.options.__file="README.md";t.default=_.exports}}]);